---
# by default this playbook runs in the staging environment
# to run in production, pass '-e runtime_env=production'
- name: build the rails app for despositing research data
  hosts: pdc_describe_{{ runtime_env | default('staging') }}
  remote_user: pulsys
  become: true
  vars_files:
    - ../site_vars.yml
    - ../group_vars/pdc_describe/main.yml
    - ../group_vars/pdc_describe/{{ runtime_env | default('staging') }}.yml
    - ../group_vars/pdc_describe/vault.yml

  vars:
    - post_install: |
        Possible Things left to do:
        - run a cap deploy for pdc_describe: https://github.com/pulibrary/pdc_describe

  roles:
    - role: roles/mailcatcher
    - role: roles/rails_app
    - role: roles/redis
    - role: roles/sidekiq_worker
    - role: roles/datadog

  tasks:
    - name: install nfs-common
      ansible.builtin.apt:
        name: "nfs-common"
        state: present
        update_cache: true
      when: runtime_env == "production"

    - name:  add fqdn for idmapping
      ansible.builtin.lineinfile:
        path: /etc/idmapd.conf
        insertbefore: '# Domain = localdomain'
        line: "Domain = {{ nfs_host_server }}"
        state: present
      when: runtime_env == "production"

    - name:  enable id_mapping
      ansible.builtin.lineinfile:
        path: /etc/default/nfs-common
        regexp: '^NEED_IDMAPD='
        line: NEED_IDMAPD=yes
      notify: restart idmapd
      when: runtime_env == "production"

    - name:  add fqdn for idmapping
      ansible.builtin.lineinfile:
        path: /etc/idmapd.conf
        insertbefore: '# Domain = localdomain'
        line: "Domain = {{ nfs_host_server }}"
        state: present
      when: runtime_env == "production"

    - name: Ensure the presence of nfs mount
      ansible.posix.mount:
        src: "{{ nfs_server }}:/var/nfs/tigerdata"
        path: "/mnt/nfs/tigerdata"
        state: mounted
        fstype: nfs
        opts: rw,sync,hard
      become: true
      when: runtime_env  == "production"

  handlers:
    - name: restart idmapd
      ansible.builtin.service:
        name: idmapd
        state: restarted
  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ slack_alerts_channel }}"
      when: not ansible_check_mode
